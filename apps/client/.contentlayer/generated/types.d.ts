// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Announcement = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Announcement'
  /** The title of the strategy */
  title: string
  /** Description for hero caption. */
  description: string
  /** Excerpt used for announcement listings. */
  excerpt: string
  /** Date of the strategy release. */
  date: IsoDateTimeString
  images?: Images | undefined
  /** Drafts are unpublished and not available in production. */
  draft: boolean
  /** MDX file body */
  body: MDX
  path: string
}

export type Strategy = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Strategy'
  /** The title of the strategy */
  title: string
  /** Description for hero caption. */
  description: string
  /** Date of the strategy release. */
  date: IsoDateTimeString
  images?: Images | undefined
  /** Drafts are unpublished and not available in production. */
  draft: boolean
  /** MDX file body */
  body: MDX
  difficulty: string
  basePath: string
  path: string
  expansion: nested
  instance: nested
}  

/** Nested types */
export type Images = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Images'
  inset?: string | undefined

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Announcement | Strategy
export type DocumentTypeNames = 'Announcement' | 'Strategy'

export type NestedTypes = Images
export type NestedTypeNames = 'Images'


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Announcement: Announcement
  Strategy: Strategy
}

export type NestedTypeMap = {
  Images: Images
}

 